这是一个Linux 系统使用的共享库依赖导出工具，它能把可执行文件或者共享库的依赖库导出到当前目录下，方便程序的移植搬运。

ldd命令原理介绍：

1、首先ldd不是一个可执行程序，而只是一个shell脚本

2、ldd能够显示可执行模块的dependency，其原理是通过设置一系列的环境变量，如下：LD_TRACE_LOADED_OBJECTS、LD_WARN、LD_BIND_NOW、LD_LIBRARY_VERSION、LD_VERBOSE等。
当LD_TRACE_LOADED_OBJECTS环境变量不为空时，任何可执行程序在运行时，它都会只显示模块的dependency，而程序并不真正执行。要不你可以在shell终端测试一下，如下：

(1) export LD_TRACE_LOADED_OBJECTS=1
(2) 再执行任何的程序，如ls等，看看程序的运行结果

3、ldd显示可执行模块的dependency的工作原理，其实质是通过ld-linux.so（elf动态库的装载器）来实现的。我们知道，ld-linux.so模块会先于executable模块程序工作，并获得控制权，
因此当上述的那些环境变量被设置时，ld-linux.so选择了显示可执行模块的dependency。

4、实际上可以直接执行ld-linux.so模块，如：/lib/ld-linux.so.2 --list program（这相当于ldd program）

ldd ./Xorg
/lib/ld-linux.so.2 --list ./Xorg
